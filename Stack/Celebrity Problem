A celebrity is a person who is known to all but does not know anyone at a party. 
If you go to a party of N people, find if there is a celebrity in the party or not.

A square NxN matrix M[][] is used to represent people at the party such that if an element of row i and column j  is set to 1 it means ith person knows jth person. 
Here M[i][i] will always be 0.

Note: Follow 0 based indexing.
 
Example 1:

Input:
N = 3
M[][] = {{0 1 0},
         {0 0 0}, 
         {0 1 0}}
Output: 1
Explanation: 0th and 2nd person both
know 1. Therefore, 1 is the celebrity. 

Example 2:

Input:
N = 2
M[][] = {{0 1},
         {1 0}}
Output: -1
Explanation: The two people at the party both
know each other. None of them is a celebrity.

------------------------------------------------------------------------------------------------------
class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& arr, int n) 
    {
        // code here 
    stack<int>s;
    for(int i = 0;i < n;i++){
        s.push(i);
    }
    while(s.size() >= 2){
        int i = s.top();
        s.pop();
        int j = s.top();
        s.pop();
        if(arr[i][j]){
            s.push(j);      // i is not a celebrity
        }
        else{
            s.push(i);      // j is not a celebrity
        }
    }
    int pot = s.top(),i;    // pot is probably a celebrity
    for(i = 0;i < n;i++){
        if(i == pot)    continue;
        if(arr[i][pot] == 0 or arr[pot][i] == 1){
            return -1;
            
        }
    }
    return pot;
    }
};
