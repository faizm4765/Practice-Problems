Given a pattern containing only I's and D's. I for increasing and D for decreasing.
Devise an algorithm to print the minimum number following that pattern.
Digits from 1-9 and digits can't repeat.

 

Example 1:

Input:
D
Output:
21
Explanation:
D is meant for decreasing,
So we choose the minimum number
among 21,31,54,87,etc.
 

Example 2:

Input:
IIDDD
Output:
126543
Explanation:
Above example is self- explanatory,
1 < 2 < 6 > 5 > 4 > 3
  I - I - D - D - D
-------------------------------------------------------------------------------------------------------------

string printMinNumberForPattern(string S){
        // code here 
        stack<int>st;
        int i = 1;
        string res;
        for(auto c: S){
            if(c == 'D'){
                st.push(i);
                i++;
            }
            else{
                st.push(i);
                i++;
                while(!st.empty()){
                    res += (st.top() + '0');
                    st.pop();
                }
            }
        }
        st.push(i);
        while(!st.empty()){
            res += (st.top() + '0');
            st.pop();
        }
        return res;
    }
