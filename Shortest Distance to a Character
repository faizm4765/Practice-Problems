Given a string s and a character c that occurs in s, return an array of integers answer where 
answer.length == s.length and answer[i] is the shortest distance from s[i] to the character c in s.

Example 1:

Input: s = "loveleetcode", c = "e"
Output: [3,2,1,0,1,0,0,1,2,2,1,0]
Example 2:

Input: s = "aaab", c = "b"
Output: [3,2,1,0]
 

Constraints:

1 <= s.length <= 104
s[i] and c are lowercase English letters.
c occurs at least once in s.


--------------------------------------------------------------------------
--------------------------------------------------------------------------

#define pb push_back
class Solution {
public:
    vector<int> shortestToChar(string s, char c) {
        
        vector<int> v;
        int n = s.size();
        int pos = -n;
        
        for(int i=0;i<n;i++){
            if(s[i] == c){
                pos = i;
            }
            
            v.pb(i-pos);
            
        }
        
        for(int i=n-1;i>=0;i--){
            
            if(s[i] == c){
                pos = i;
            }
            
            int res = min(v[i],abs(pos-i));
            v[i] = res;
            
        }
        return v;
    }
};
