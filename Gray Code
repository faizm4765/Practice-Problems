Given an integer n representing the total number of bits in the code, return any sequence of gray code.

A gray code sequence must begin with 0.

 

Example 1:

Input: n = 2
Output: [0,1,3,2]
Explanation:
00 - 0
01 - 1
11 - 3
10 - 2
[0,2,3,1] is also a valid gray code sequence.
00 - 0
10 - 2
11 - 3
01 - 1
Example 2:

Input: n = 1
Output: [0,1]
 

Constraints:

1 <= n <= 16
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

#define pb push_back

class Solution {
public:
    vector<string> go(int n){
        vector<string> res;
        if(n == 1){
            res.pb("0");
            res.pb("1");
            return res;
        }
        vector<string> v = go(n-1);
        for(auto c:v){
            string s = to_string(0) + c;
            res.pb(s);
        }
        for(int i = v.size()-1;i>=0;i--){
            string s = to_string(1) + v[i];
            res.pb(s);
        }
        return res;
    }
    vector<int> grayCode(int n) {
        vector<int> v;
        vector<string> ans = go(n);
        for(auto c:ans){
            int num = stoi(c,0,2);
            v.pb(num);
        }
        return v;
    }
};
